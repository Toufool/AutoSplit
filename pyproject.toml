# https://github.com/hhatto/autopep8#usage
# https://github.com/hhatto/autopep8#more-advanced-usage
[tool.autopep8]
max_line_length = 100
aggressive = 3
exclude = ".venv/*,src/gen/*"
ignore = [
  "E124", # Closing bracket may not match multi-line method invocation style (enforced by add-trailing-comma)
  "E70", # Allow ... on same line as def
  "E721", # Breaks when needing an exact type
  # Autofixed by Ruff
  # Check for the "Fix" flag https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
  "E2", # Whitespace
  "E3", # Blank lines
  "E703", # useless-semicolon
  "E71", # Statement (comparisons)
  "E731", # lambda-assignment
  "W29", # Whitespace warning
  "W605", # invalid-escape-sequence
  # Autofixed by other Ruff rules
  "E401", # I001: unsorted-imports
  "W690", # UP: pyupgrade
]

# https://github.com/microsoft/pyright/blob/main/docs/configuration.md#sample-pyprojecttoml-file
[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.10"
# Prefer `pyright: ignore`
enableTypeIgnoreComments = false

###
# Downgraded diagnostics
###
# Type stubs may not be completable
reportMissingTypeStubs = "warning"
# Extra runtime safety
reportUnnecessaryComparison = "warning"
# Using Flake8/Ruff instead. Name is already grayed out and red squiggle looks like a mistyped import
reportUnusedImport = "none"

###
# Off by default even in strict mode
###
deprecateTypingAliases = true
enableExperimentalFeatures = true
reportCallInDefaultInitializer = "error"
reportImplicitOverride = "error"
reportImplicitStringConcatenation = "error"
# False positives with TYPE_CHECKING
reportImportCycles = "information"
# Too strict. False positives on base classes
reportMissingSuperCall = "none"
reportPropertyTypeMismatch = "error"
reportShadowedImports = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "none"

# Exclude from scanning when running pyright
exclude = [
  ".venv/",
  # Auto generated, fails some strict pyright checks
  "build/",
  "src/gen/",
]
# Ignore must be specified for Pylance to stop displaying errors
ignore = [
  # We expect stub files to be incomplete or contain useless statements
  "**/*.pyi",
]
